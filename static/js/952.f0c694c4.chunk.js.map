{"version":3,"file":"static/js/952.f0c694c4.chunk.js","mappings":"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","sources":["components/Movie/Movie.styled.js","components/Movie/Movie.jsx","service/fixString.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieInfoContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  padding-right: 250px;\n  padding-bottom: 20px;\n  padding-top: 20px;\n  padding-left: 20px;\n`;\n\nexport const GanreList = styled.ul`\n  display: flex;\n  gap: 8px;\n  list-style: none;\n  padding-left: 0px;\n`;\n\nexport const Aditional = styled.div`\n  padding-left: 20px;\n  border-bottom: 1px black solid;\n  border-top: 1px black solid;\n  box-shadow: 4px 0px 10px -1px rgb(0 0 0 / 41%);\n`;\n\nexport const AditionalList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    gap: 8px;\n\n`\n","import PropTypes from 'prop-types';\nimport {\n  MovieInfoContainer,\n  GanreList,\n  Aditional,\n  AditionalList,\n} from './Movie.styled';\nimport { cutString, countProcentVote } from 'service/fixString';\nimport { Link } from 'react-router-dom';\n\nconst Movie = ({ movie }) => {\n  const { title, release_date, overview, poster_path, vote_count, id, genres } =\n    movie;\n\n  let baseUrlImg = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  if (!poster_path) {\n    baseUrlImg = `https://netsh.pp.ua/wp-content/uploads/2017/08/Placeholder-1.png`;\n  }\n\n  return (\n    <>\n      <MovieInfoContainer>\n        <div>\n          <img src={baseUrlImg} alt=\"poster\" width={250} />\n        </div>\n\n        <div>\n          <h2>\n            {title}\n            <span> {`(${cutString(release_date)})`}</span>\n          </h2>\n\n          <p>\n            User Score: <span>{countProcentVote(vote_count)}%</span>\n          </p>\n          <h3>Overvie</h3>\n          <p>{overview}</p>\n          <h3>Generes</h3>\n          <GanreList>\n            {genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </GanreList>\n        </div>\n      </MovieInfoContainer>\n      <Aditional>\n        <p>Aditional information</p>\n        <AditionalList>\n          <li>\n            <Link to=\"cast\" id={id}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" id={id}>\n              Reviews\n            </Link>\n          </li>\n        </AditionalList>\n      </Aditional>\n    </>\n  );\n};\n\nexport default Movie;\n\nMovie.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_count: PropTypes.number,\n    id: PropTypes.number,\n    genres: PropTypes.array,\n  }).isRequired,\n};\n","export const cutString = s => s.slice(0, 4);\nexport const countProcentVote = vc => (vc * 10).toString().slice(0, 2);\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieDetailsContainer = styled.main`\nmargin-top: 10px;\n`\n\nexport const LinkBeack = styled(NavLink)`\n  display: inline-block;\n  border: black, solid, 1px;\n  border-radius: 8px;\n  padding: 6px;\n  margin-left: 10px;\n  text-decoration: none;\n  background-color: ivory;\n`;\n","import { getMoviesDetails } from 'service/api';\nimport { useState, useRef, Suspense, useEffect } from 'react';\nimport Movie from 'components/Movie/Movie';\nimport { LinkBeack, MovieDetailsContainer } from './MovieDetails.styled';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const src = useRef(location.state?.from ?? '/movies');\n\n  const { id } = useParams();\n  const [movie, setMovie] = useState('');\n\n  useEffect(() => {\n    getMoviesDetails(id).then(r => {\n      setMovie(m => (m = r));\n    });\n  }, [id]);\n\n  return (\n    <MovieDetailsContainer>\n      <LinkBeack to={src.current}>{`‚Üê Go beack`}</LinkBeack>\n      {movie && <Movie movie={movie} />}\n      <Suspense fallback={<div>Loader.........</div>}>\n        <Outlet />\n      </Suspense>\n    </MovieDetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = `api_key=9dfb13779fa5e86c42f825ab68b431d4`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const getMovies = async () => {\n  const response = await axios.get(`trending/movie/day?${KEY}`);\n  return response.data.results;\n};\n\nexport const getMoviesDetails = async id => {\n  const response = await axios.get(`movie/${id}?${KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async request => {\n  const response = await axios.get(\n    `search/movie?${KEY}&language=en-US&query=${request}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getCast = async id => {\n  const response = await axios.get(`movie/${id}/credits?${KEY}&language=en-US`);\n  return response.data.cast;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?${KEY}&language=en-US`);\n  return response.data.results;\n};\n"],"names":["MovieInfoContainer","styled","GanreList","Aditional","AditionalList","vc","s","movie","title","release_date","overview","poster_path","vote_count","id","genres","baseUrlImg","src","alt","width","slice","toString","map","name","to","MovieDetailsContainer","LinkBeack","NavLink","location","useLocation","useRef","state","from","useParams","useState","setMovie","useEffect","getMoviesDetails","then","r","m","current","Suspense","fallback","KEY","axios","getMovies","response","data","results","searchMovies","request","getCast","cast","getReviews"],"sourceRoot":""}