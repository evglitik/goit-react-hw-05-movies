{"version":3,"file":"static/js/578.f60c82d4.chunk.js","mappings":"oNAmBA,EAjBiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACVC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,UAAWC,EAAiBJ,EAAjBI,aACzBC,EAAU,yCAAqCD,GAMnD,OAJKA,IACHC,EAAU,qEAIV,2BACE,gBAAKC,IAAG,UAAKD,GAAcE,IAAG,gBAAWL,GAAQM,MAAM,SACvD,uBAAIN,KACJ,uBAAIC,MAHGF,EAMZ,E,8BCQD,EApBiB,WACf,OAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQV,GAAOW,EAAAA,EAAAA,MAAPX,GAQR,OANAY,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQb,GAAIc,MAAK,SAAAC,GACfL,GAAS,OAAIK,GACd,GACF,GAAE,CAACf,KAGF,wBACGS,EAAMO,OAAS,GACdP,EAAMQ,KAAI,SAAAC,GACR,OAAO,SAAC,EAAD,CAAUnB,KAAMmB,GAAQA,EAAElB,GAClC,KAGR,C,4MCrBKmB,EAAG,2CACTC,IAAAA,SAAAA,QAAA,gCAEO,IAAMC,EAAS,mCAAG,oGACAD,IAAAA,IAAA,6BAAgCD,IADhC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKTC,EAAgB,mCAAG,WAAMzB,GAAN,uFACPoB,IAAAA,IAAA,gBAAmBpB,EAAnB,YAAyBmB,IADlB,cACxBG,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKhBG,EAAY,mCAAG,WAAMC,GAAN,uFACHP,IAAAA,IAAA,uBACLD,EADK,iCACuBQ,EADvB,gCADG,cACpBL,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZX,EAAO,mCAAG,WAAMb,GAAN,uFACEoB,IAAAA,IAAA,gBAAmBpB,EAAnB,oBAAiCmB,EAAjC,oBADF,cACfG,EADe,yBAEdA,EAASC,KAAKxB,MAFA,2CAAH,sDAKP6B,EAAU,mCAAG,WAAM5B,GAAN,uFACDoB,IAAAA,IAAA,gBAAmBpB,EAAnB,oBAAiCmB,EAAjC,oBADC,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD","sources":["components/CastItem/CastItem.jsx","components/CastList/CastList.jsx","service/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst CastItem = ({ cast }) => {\n  const { id, name, character, profile_path } = cast;\n  let baseUrlImg = `https://image.tmdb.org/t/p/w500${profile_path}`;\n\n  if (!profile_path) {\n    baseUrlImg = `https://netsh.pp.ua/wp-content/uploads/2017/08/Placeholder-1.png`;\n  }\n\n  return (\n    <li key={id}>\n      <img src={`${baseUrlImg}`} alt={`cast: ${name}`} width=\"150\" />\n      <p>{name}</p>\n      <p>{character}</p>\n    </li>\n  );\n};\n\nexport default CastItem;\n\nCastItem.propTypes = {\n  cast: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    character: PropTypes.string,\n    profile_path: PropTypes.string,\n  }).isRequired,\n};\n","import CastItem from 'components/CastItem/CastItem';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'service/api';\n\nconst CastList = () => {\n  const [casts, setCasts] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getCast(id).then(r => {\n      setCasts([...r]);\n    });\n  }, [id]);\n\n  return (\n    <ul>\n      {casts.length > 0 &&\n        casts.map(e => {\n          return <CastItem cast={e} key={e.id} />;\n        })}\n    </ul>\n  );\n};\n\nexport default CastList;\n","import axios from 'axios';\n\nconst KEY = `api_key=9dfb13779fa5e86c42f825ab68b431d4`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const getMovies = async () => {\n  const response = await axios.get(`trending/movie/day?${KEY}`);\n  return response.data.results;\n};\n\nexport const getMoviesDetails = async id => {\n  const response = await axios.get(`movie/${id}?${KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async request => {\n  const response = await axios.get(\n    `search/movie?${KEY}&language=en-US&query=${request}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getCast = async id => {\n  const response = await axios.get(`movie/${id}/credits?${KEY}&language=en-US`);\n  return response.data.cast;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?${KEY}&language=en-US`);\n  return response.data.results;\n};\n"],"names":["cast","id","name","character","profile_path","baseUrlImg","src","alt","width","useState","casts","setCasts","useParams","useEffect","getCast","then","r","length","map","e","KEY","axios","getMovies","response","data","results","getMoviesDetails","searchMovies","request","getReviews"],"sourceRoot":""}