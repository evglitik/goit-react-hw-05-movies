{"version":3,"file":"static/js/891.d58f47ba.chunk.js","mappings":"wOAuDA,EArDc,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAEbC,EAOED,EAPFC,MACAC,EAMEF,EANFE,aACAC,EAKEH,EALFG,SACAC,EAIEJ,EAJFI,UACAC,EAGEL,EAHFK,WACAC,EAEEN,EAFFM,YACAC,EACEP,EADFO,GAGEC,EAAU,yCAAqCF,GAMnD,OAJKA,IACHE,EAAU,qEAIV,iCACE,4BACE,gBAAKC,IAAKD,EAAYE,IAAI,SAASC,MAAO,OAC1C,0BACGV,GACD,2CAAYC,EAAZ,YAGF,wCACa,0BAAOG,QAEpB,qCACA,uBAAIF,KACJ,qCACA,uBAAIC,QAEN,4BACE,4CACA,2BACE,yBACE,SAAC,KAAD,CAAMQ,GAAG,OAAOL,GAAIA,EAApB,qBAIF,yBACE,SAAC,KAAD,CAAMK,GAAG,UAAUL,GAAIA,EAAvB,+BAQX,E,UCxBD,EAxBqB,WAAO,IAAD,IACnBM,GAAWC,EAAAA,EAAAA,MACXL,GAAMM,EAAAA,EAAAA,QAAM,oBAACF,EAASG,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAEnCV,GAAOW,EAAAA,EAAAA,MAAPX,GACR,GAA0BY,EAAAA,EAAAA,UAAS,IAAnC,eAAOnB,EAAP,KAAcoB,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBf,GAAIgB,MAAK,SAAAC,GACxBJ,GAAS,SAAAK,GAAC,OAASD,CAAT,GACX,GACF,GAAE,CAACjB,KAGF,6BACE,SAAC,KAAD,CAAMK,GAAIH,EAAIiB,QAAd,wBACC1B,IAAS,SAAC,EAAD,CAAOA,MAAOA,KACxB,SAAC,EAAA2B,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAIP,C,4MCzBKC,EAAG,2CACTC,IAAAA,SAAAA,QAAA,gCAEO,IAAMC,EAAS,mCAAG,oGACAD,IAAAA,IAAA,6BAAgCD,IADhC,cACjBG,EADiB,yBAIhBA,EAASC,KAAKC,SAJE,2CAAH,qDAUTZ,EAAgB,mCAAG,WAAMf,GAAN,uFACPuB,IAAAA,IAAA,gBAAmBvB,EAAnB,YAAyBsB,IADlB,cACxBG,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAUhBE,EAAY,mCAAG,WAAMC,GAAN,uFACHN,IAAAA,IAAA,uBACLD,EADK,iCACuBO,EADvB,gCADG,cACpBJ,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,sDAYZG,EAAO,mCAAG,WAAM9B,GAAN,uFACEuB,IAAAA,IAAA,gBAAmBvB,EAAnB,oBAAiCsB,EAAjC,oBADF,cACfG,EADe,yBAGdA,EAASC,KAAKK,MAHA,2CAAH,sDASPC,EAAU,mCAAG,WAAMhC,GAAN,uFACDuB,IAAAA,IAAA,gBAAmBvB,EAAnB,oBAAiCsB,EAAjC,oBADC,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD","sources":["components/Movie/Movie.jsx","pages/MovieDetails/MovieDetails.jsx","service/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst Movie = ({ movie }) => {\n  const {\n    title,\n    release_date,\n    overview,\n    genre_ids,\n    popularity,\n    poster_path,\n    id,\n  } = movie;\n\n  let baseUrlImg = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  if (!poster_path) {\n    baseUrlImg = `https://netsh.pp.ua/wp-content/uploads/2017/08/Placeholder-1.png`;\n  }\n\n  return (\n    <>\n      <div>\n        <img src={baseUrlImg} alt=\"poster\" width={250} />\n        <h2>\n          {title}\n          <span> {`(${release_date})`}</span>\n        </h2>\n\n        <p>\n          UserScore: <span>{popularity}</span>\n        </p>\n        <h3>Overvie</h3>\n        <p>{overview}</p>\n        <h3>Generes</h3>\n        <p>{genre_ids}</p>\n      </div>\n      <div>\n        <h3>Aditional info</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" id={id}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" id={id}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Movie;\n","import { getMoviesDetails } from 'service/api';\nimport { useState, useRef, Suspense, useEffect } from 'react';\nimport Movie from 'components/Movie/Movie';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const src = useRef(location.state?.from ?? '/movies');\n\n  const { id } = useParams();\n  const [movie, setMovie] = useState('');\n\n  useEffect(() => {\n    getMoviesDetails(id).then(r => {\n      setMovie(m => (m = r));\n    });\n  }, [id]);\n\n  return (\n    <main>\n      <Link to={src.current}>{`<--- beack`}</Link>\n      {movie && <Movie movie={movie} />}\n      <Suspense fallback={<div>Loader.........</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = `api_key=9dfb13779fa5e86c42f825ab68b431d4`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const getMovies = async () => {\n  const response = await axios.get(`trending/movie/day?${KEY}`);\n\n  // console.log(response.data.results)\n  return response.data.results;\n  //   return response.results.map(({ id, webformatURL, largeImageURL }) => {\n  //     return { id, webformatURL, largeImageURL };\n  //   });\n};\n\nexport const getMoviesDetails = async id => {\n  const response = await axios.get(`movie/${id}?${KEY}`);\n\n  // console.log(response.data.results)\n  return response.data;\n  //   return response.results.map(({ id, webformatURL, largeImageURL }) => {\n  //     return { id, webformatURL, largeImageURL };\n  //   });\n};\n\nexport const searchMovies = async request => {\n  const response = await axios.get(\n    `search/movie?${KEY}&language=en-US&query=${request}&page=1&include_adult=false`\n  );\n\n  // console.log(response.data.results)\n  return response.data.results;\n  //   return response.results.map(({ id, webformatURL, largeImageURL }) => {\n  //     return { id, webformatURL, largeImageURL };\n  //   });\n};\n\nexport const getCast = async id => {\n  const response = await axios.get(`movie/${id}/credits?${KEY}&language=en-US`);\n\n  return response.data.cast;\n  //   return response.results.map(({ id, webformatURL, largeImageURL }) => {\n  //     return { id, webformatURL, largeImageURL };\n  //   });\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?${KEY}&language=en-US`);\n  return response.data.results;\n  //   return response.results.map(({ id, webformatURL, largeImageURL }) => {\n  //     return { id, webformatURL, largeImageURL };\n  //   });\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n"],"names":["movie","title","release_date","overview","genre_ids","popularity","poster_path","id","baseUrlImg","src","alt","width","to","location","useLocation","useRef","state","from","useParams","useState","setMovie","useEffect","getMoviesDetails","then","r","m","current","Suspense","fallback","KEY","axios","getMovies","response","data","results","searchMovies","request","getCast","cast","getReviews"],"sourceRoot":""}