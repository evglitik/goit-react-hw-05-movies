{"version":3,"file":"static/js/268.27972d68.chunk.js","mappings":"8LAYA,EAVkB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAC7B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMC,MAAOA,EAAlC,SACGF,KAIR,E,UCYD,EAnBmB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,SAAC,EAAD,CAEEP,GAAIO,EAAEP,GACND,KAAMQ,EAAEC,MACRP,MAAO,CAAEQ,KAAML,IAHVG,EAAEP,GAMZ,KAGN,C,8GCaD,EA/BkB,SAAC,GAAkB,IAAhBU,EAAe,EAAfA,SACnB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OACE,kBAAMH,SAZa,SAAAH,GACnBA,EAAEO,iBAEqB,KAAnBF,EAAQG,QAIZL,EAASE,GACTC,EAAW,KAJTG,QAAQC,IAAI,iHAKf,EAGC,WACE,kBACEC,KAAK,OACLC,MAAOP,EACPQ,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAAU,SAAAhB,GAAC,OAAIM,EAAWN,EAAEiB,cAAcL,MAAMM,cAArC,KAEb,mBAAQP,KAAK,SAAb,UACE,yCAIP,E,8BCID,EA7Be,WAAO,IAAD,EACnB,GAA4BP,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeuB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE/CC,EAAAA,EAAAA,YAAU,WACHF,GAKLG,EAAAA,EAAAA,IAAaH,GAAWI,MAAK,SAAAC,GAC3BT,GAAU,SAAAU,GAAC,cAAQD,EAAR,GACZ,IANCT,EAAU,GAOb,GAAE,CAACI,IAOJ,OACE,6BACE,SAAC,EAAD,CAAWpB,SAPU,SAAA2B,GAEvBR,EAD6B,KAAVQ,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,KAKG,SAACC,EAAA,EAAD,CAAYnC,OAAQA,MAGzB,C,4MC/BKoC,EAAG,2CACTC,IAAAA,SAAAA,QAAA,gCAEO,IAAMC,EAAS,mCAAG,oGACAD,IAAAA,IAAA,6BAAgCD,IADhC,cACjBG,EADiB,yBAIhBA,EAASC,KAAKC,SAJE,2CAAH,qDAUTC,EAAgB,mCAAG,WAAM7C,GAAN,uFACPwC,IAAAA,IAAA,gBAAmBxC,EAAnB,YAAyBuC,IADlB,cACxBG,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAUhBV,EAAY,mCAAG,WAAMrB,GAAN,uFACH4B,IAAAA,IAAA,uBACLD,EADK,iCACuB3B,EADvB,gCADG,cACpB8B,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,sDAYZE,EAAO,mCAAG,WAAM9C,GAAN,uFACEwC,IAAAA,IAAA,gBAAmBxC,EAAnB,oBAAiCuC,EAAjC,oBADF,cACfG,EADe,yBAGdA,EAASC,KAAKI,MAHA,2CAAH,sDASPC,EAAU,mCAAG,WAAMhD,GAAN,uFACDwC,IAAAA,IAAA,gBAAmBxC,EAAnB,oBAAiCuC,EAAjC,oBADC,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD","sources":["components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","service/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst MovieItem = ({ name, id, state }) => {\n  return (\n    <li>\n      <Link to={`/movies/${id}`} state={state}>\n        {name}\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;\n","import MovieItem from 'components/MovieItem/MovieItem';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(e => {\n        return (\n          <MovieItem\n            key={e.id}\n            id={e.id}\n            name={e.title}\n            state={{ from: location }}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useState } from 'react';\n\nconst SearchBox = ({ onSubmit }) => {\n  const [request, setRequest] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (request.trim() === '') {\n      console.log('Введіть назву фільму');\n      return;\n    }\n    onSubmit(request);\n    setRequest('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={request}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={e => setRequest(e.currentTarget.value.toLowerCase())}\n      />\n      <button type=\"submit\">\n        <span>Search</span>\n      </button>\n    </form>\n  );\n};\n\nexport default SearchBox;\n","import SearchBox from 'components/SearchBox/SearchBox';\nimport { searchMovies } from 'service/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieName) {\n      setMovies([]);\n      return;\n    }\n\n    searchMovies(movieName).then(r => {\n      setMovies(m => [...r]);\n    });\n  }, [movieName]);\n\n  const handleFormSubmit = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main>\n      <SearchBox onSubmit={handleFormSubmit} />\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = `api_key=9dfb13779fa5e86c42f825ab68b431d4`;\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const getMovies = async () => {\n  const response = await axios.get(`trending/movie/day?${KEY}`);\n\n  // console.log(response.data.results)\n  return response.data.results;\n  //   return response.results.map(({ id, webformatURL, largeImageURL }) => {\n  //     return { id, webformatURL, largeImageURL };\n  //   });\n};\n\nexport const getMoviesDetails = async id => {\n  const response = await axios.get(`movie/${id}?${KEY}`);\n\n  // console.log(response.data.results)\n  return response.data;\n  //   return response.results.map(({ id, webformatURL, largeImageURL }) => {\n  //     return { id, webformatURL, largeImageURL };\n  //   });\n};\n\nexport const searchMovies = async request => {\n  const response = await axios.get(\n    `search/movie?${KEY}&language=en-US&query=${request}&page=1&include_adult=false`\n  );\n\n  // console.log(response.data.results)\n  return response.data.results;\n  //   return response.results.map(({ id, webformatURL, largeImageURL }) => {\n  //     return { id, webformatURL, largeImageURL };\n  //   });\n};\n\nexport const getCast = async id => {\n  const response = await axios.get(`movie/${id}/credits?${KEY}&language=en-US`);\n\n  return response.data.cast;\n  //   return response.results.map(({ id, webformatURL, largeImageURL }) => {\n  //     return { id, webformatURL, largeImageURL };\n  //   });\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?${KEY}&language=en-US`);\n  return response.data.results;\n  //   return response.results.map(({ id, webformatURL, largeImageURL }) => {\n  //     return { id, webformatURL, largeImageURL };\n  //   });\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n"],"names":["name","id","state","to","movies","location","useLocation","map","e","title","from","onSubmit","useState","request","setRequest","preventDefault","trim","console","log","type","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","searchMovies","then","r","m","query","MoviesList","KEY","axios","getMovies","response","data","results","getMoviesDetails","getCast","cast","getReviews"],"sourceRoot":""}